<h3>Numbering Threaded Comments</h3>

<div class="gtcn_aside">
<h4>Updates on Greg's WordPress Plugins</h4>
<p>You can keep up on the latest plugin announcements and tutorials by visiting <a href="http://gregsplugins.com/">Greg's Plugins</a>.</p>
</div>

<p>Please also see the README file distributed with this plugin, and for details on how to wrap the following functions in conditionals so your theme will only rely on this plugin when it is activated, please see: <a href="http://gregsplugins.com/lib/faq/">Greg's Plugins FAQ</a>.</p>

<h4>Leveraging the Advanced Commenting Features Which Debuted in WordPress 2.7</h4>

<p>The introduction of WordPress 2.7 brought with it significant new capabilities for threading and paging comments, but these same changes in WordPress mean that well established methods for numbering comments -- like including a basic incrementing counter within your template code -- no longer do the trick. Fortunately, taking advantage of modern comment handling features like paging and threading doesn't have to mean giving up comment numbering altogether.</p>

<p>However, it <strong>does</strong> mean that your theme needs specifically to support the new comment features using a special template tag called <code>wp_list_comments()</code>. It also means that if you want to make <strong>any</strong> modifications to how individual comments are displayed, your theme <strong>must</strong> define a callback function to handle the display of individual comments, and that callback function must be referenced by the <code>wp_list_comments()</code> template tag. For better or worse, that is how WordPress works as of this writing: advanced comment functionality requires <code>wp_list_comments()</code>, and overriding the built-in routines for displaying an individual comment requires a callback function.</p>

<p>In other words, <strong>this is not a plugin feature, it is a WordPress feature</strong>. It's crucial to understand this before trying to set up this plugin to work with your blog.</p>

<h4>Basic Usage</h4>

<p>So, having said all that, what's the fastest (and least flexible) way to get your comments numbered?</p>

<p>Replace <code>wp_list_comments()</code> in your theme's <code>comments.php</code> file with <code>wp_list_comments('callback=gtcn_basic_callback')</code>.</p>

<p>Please note that if you decide to use the basic callback function included with the plugin, and you are using anything other than the default theme, the styling of your comments <em>almost certainly will change as a result</em>. Why? Because taking advantage of all the new comment features introduced in WordPress 2.7 <em>requires</em> the use of a callback function (have you heard this before?), and replacing the one you have with the bundled basic callback function -- or adding one where there wasn't one before -- means replacing whatever existing structure and style you already have in place. If you're using the WordPress default theme, the two will coincide, so you won't see any difference -- but with other themes employing their own structure, they will not.</p>

<p>This fact is 1) unavoidable and 2) straightforward to overcome. It is unavoidable because this is how WordPress handles comments as of version 2.7 and later. It is straightforward to overcome because anyone can create their own callback function, as detailed under 'Advanced Usage'.</p>

<p><em>Please do not contact me to report that using the basic callback function has changed the styling of your blog's comments!</em></p>

<h4>Advanced Usage</h4>

<p>And what's the more involved (but far more flexible) way to get your comments numbered?</p>

<p>Create your own callback function to display comments how you would like them (by modifying the callback function already included in your theme or, if your theme doesn't have one, by using the included basic callback function as a starting point), and insert <code>gtcn_comment_numbering($comment->comment_ID, $args)</code> within the callback function wherever you would like the comment number to appear. For custom styling, the function can also take an optional third parameter which defines the <code>class</code> of the <code>div</code> used to wrap the comment number. The default class is <code>commentnumber</code>. (If you'd rather not have any <code>div</code> wrapper placed around the comment number, you can specify this in the main plugin settings.) Finally, a fourth optional parameter enables you to suppress automatic output of the comment number by passing in 'quiet'. By default, the comment number will be echoed rather than returned.</p>

<p>So, for example, to retrieve the comment number rather than triggering its output, you might use:</p>

<p><code>$comment_number = gtcn_comment_numbering($comment->comment_ID, $args, $wrapclass, 'quiet')</code></p>

<p>The usual place to store your own callback function is in your theme's <code>functions.php</code> file. Just give the function a unique name, and reference <em>it</em> -- rather than the included basic callback function -- when your theme calls <code>wp_list_comments()</code>, like so:</p>

<p><code>wp_list_comments('callback=my_uniquely_named_callback_function')</code></p>

<p>The procedure is described in more detail in the WordPress documentation here:</p>

<p><a href="http://codex.wordpress.org/Template_Tags/wp_list_comments">WordPress wp_list_comments documentation</a></p>

<p><em>Please note that I am not in a position to provide personal consultation on how best to code or modify a callback function for your own specific WordPress theme.</em></p>

<h3>Built-In Theme Support for Comment Numbering</h3>

<p>Please consider asking your theme developer to support this plugin out of the box: with the addition of just a single line of code, most themes can be ready to display hierarchical comment numbering as soon as this plugin is activated!</p>

<a name="privacy" id="privacy"></a><h3>Sustainable Plugin Development -- and Your Privacy</h3>

<p>Obviously, this software is provided for free. Equally obviously, it was not built for free. And hopefully also equally obviously, the software offers significant value to blog owners by adding new features to comments.</p>

<p>Many end users of plugins -- folks like yourself -- do send along a monetary contribution to authors of plugins they particularly like or benefit from. Truth be told, though, they're very much in the minority. For many other blog owners, the eyes just kind of glaze over when they see those 'donate' buttons. Install it, configure it, forget about it -- out of sight, out of mind, right? If WordPress itself is free, then everything should be free, shouldn't it? (Hey, my baby was free! What do you mean I ought to pay for her shoes?! Are you some kind of child-profiteer or something?) Right...</p>

<p>Repeatedly investing to provide innovative software that only a small minority of folks decide to contribute to (or even say 'thank you' for) just isn't a sustainable way to live. That's one main reason why so many otherwise good plugins wind up getting abandoned by their disillusioned authors, repeatedly leaving users with the hassle of searching out new ways to get the job done. Few developers actually aim to profit from writing plugins -- most of the reward comes from providing some value to the world -- but remember that when a developer is writing a plugin, they are almost always taking time away from their paid jobs, time away from their families, and time away from other personal interests.</p>

<p>As a participant in the <a href="http://pluginsponsors.com">Sustainable Plugins Sponsorship Network</a> (SPSN), I'm trying to offset some of the large investment which goes into the creation and maintenance of plugins. The SPSN model offers modest sponsorships to plugin authors in return for a small amount of screen real estate on plugin options pages. This helps out a little for the majority of cases where blog owners don't feel they receive enough benefit from a plugin to say thank you with a financial contribution. If you're one of those blog owners who <em>does</em> receive enough benefit from this plugin that you'll be willing to contribute to it, however, you can easily switch off the SPSN sponsor messages altogether: just visit the <em>Contribute</em> section.</p>

<p><strong>IMPORTANT PRIVACY INFORMATION:</strong> NO INDIVIDUALLY IDENTIFIABLE DETAILS OF ANY KIND, REGARDING EITHER YOU OR YOUR SITE, will be collected or shared as a result of displaying Sustainable Plugins Sponsorship Network (SPSN) sponsor messages. Sponsors receive only aggregate reports of impressions on a worldwide per-plugin basis, NOT on impressions or on any other activity at any individual site which happens to be using a plugin.</p>

<h3>Fine Print</h3>

<p class="gtcn_fine_print">This program is free software. You can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.</p>
<p class="gtcn_fine_print">This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY -- without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>
